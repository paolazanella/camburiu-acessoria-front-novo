// src/services/api.js
import axios from 'axios'

const api = axios.create({
    baseURL: 'http://localhost:3333', // üî• Porta do seu backend Spring Boot
    timeout: 10000, // 10 segundos de timeout
    headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
    }
})

// Interceptor para adicionar token nas requisi√ß√µes
api.interceptors.request.use(
    config => {
        const token = localStorage.getItem('token')
        if (token) {
            config.headers.Authorization = `Bearer ${token}`
        }
        
        console.log('üì° Fazendo requisi√ß√£o:', {
            method: config.method?.toUpperCase(),
            url: config.url,
            hasToken: !!token
        })
        
        return config
    },
    error => {
        console.error('‚ùå Erro na configura√ß√£o da requisi√ß√£o:', error)
        return Promise.reject(error)
    }
)

// Interceptor para tratar respostas
api.interceptors.response.use(
    response => {
        console.log('‚úÖ Resposta recebida:', {
            status: response.status,
            url: response.config.url
        })
        return response
    },
    error => {
        console.error('‚ùå Erro na resposta:', {
            status: error.response?.status,
            url: error.config?.url,
            message: error.response?.data?.message || error.message
        })
        
        // Se token inv√°lido, fazer logout
        if (error.response?.status === 401) {
            localStorage.removeItem('token')
            localStorage.removeItem('user')
            // Redirecionar para login se necess√°rio
            if (window.location.pathname !== '/') {
                window.location.href = '/'
            }
        }
        
        return Promise.reject(error)
    }
)

export default api